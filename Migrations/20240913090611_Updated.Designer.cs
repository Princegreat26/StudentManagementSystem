// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagementSystem.Data;

#nullable disable

namespace StudentManagementSystem.Migrations
{
    [DbContext(typeof(StudentDataContext))]
    [Migration("20240913090611_Updated")]
    partial class Updated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentManagementSystem.Models.AdminManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdminManagementSyt");
                });

            modelBuilder.Entity("StudentManagementSystem.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "AI",
                            Name = "Artificial Intelligence"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "FD",
                            Name = "Fashion Design"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "ML",
                            Name = "Machine Learning"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "FM",
                            Name = "Fashion Merchandising"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "WD",
                            Name = "Web Development"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "FP",
                            Name = "Fashion Photography"
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "SE",
                            Name = "Software Engineering"
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "FS",
                            Name = "Fashion Styling"
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "CS",
                            Name = "Cyber Security"
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "FJ",
                            Name = "Fashion Journalism"
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "MAD",
                            Name = "Mobile App Development"
                        },
                        new
                        {
                            Id = 12,
                            Abbreviation = "FH",
                            Name = "Fashion History"
                        },
                        new
                        {
                            Id = 13,
                            Abbreviation = "FI",
                            Name = "Fashion Illustration"
                        },
                        new
                        {
                            Id = 14,
                            Abbreviation = "BT",
                            Name = "Blockchain Technology"
                        },
                        new
                        {
                            Id = 15,
                            Abbreviation = "FB",
                            Name = "Fashion Business"
                        });
                });

            modelBuilder.Entity("StudentManagementSystem.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentsId");

                    b.ToTable("StudentManagementSyt");
                });

            modelBuilder.Entity("StudentManagementSystem.Models.Student", b =>
                {
                    b.HasOne("StudentManagementSystem.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("StudentManagementSystem.Models.Department", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
